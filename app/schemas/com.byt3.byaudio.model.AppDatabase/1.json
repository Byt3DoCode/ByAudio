{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "f7ce56d5d8c860d421a501455ccc051e",
    "entities": [
      {
        "tableName": "Folder",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`folderId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `folder_name` TEXT, `folder_path` TEXT, `folder_size` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "folderId",
            "columnName": "folderId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "folder_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "path",
            "columnName": "folder_path",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "size",
            "columnName": "folder_size",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "folderId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Song",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`songId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `song_name` TEXT, `song_duration` INTEGER NOT NULL, `sAlbumId` INTEGER NOT NULL, `sArtistId` INTEGER NOT NULL, `sFolderId` INTEGER NOT NULL, FOREIGN KEY(`sArtistId`) REFERENCES `Artist`(`artistId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`sAlbumId`) REFERENCES `Album`(`albumId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`sFolderId`) REFERENCES `Folder`(`folderId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "songId",
            "columnName": "songId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "song_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "duration",
            "columnName": "song_duration",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sAlbumId",
            "columnName": "sAlbumId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sArtistId",
            "columnName": "sArtistId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sFolderId",
            "columnName": "sFolderId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "songId"
          ]
        },
        "indices": [
          {
            "name": "index_Song_sArtistId",
            "unique": false,
            "columnNames": [
              "sArtistId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_Song_sArtistId` ON `${TABLE_NAME}` (`sArtistId`)"
          },
          {
            "name": "index_Song_sAlbumId",
            "unique": false,
            "columnNames": [
              "sAlbumId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_Song_sAlbumId` ON `${TABLE_NAME}` (`sAlbumId`)"
          },
          {
            "name": "index_Song_sFolderId_song_name",
            "unique": true,
            "columnNames": [
              "sFolderId",
              "song_name"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_Song_sFolderId_song_name` ON `${TABLE_NAME}` (`sFolderId`, `song_name`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Artist",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "sArtistId"
            ],
            "referencedColumns": [
              "artistId"
            ]
          },
          {
            "table": "Album",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "sAlbumId"
            ],
            "referencedColumns": [
              "albumId"
            ]
          },
          {
            "table": "Folder",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "sFolderId"
            ],
            "referencedColumns": [
              "folderId"
            ]
          }
        ]
      },
      {
        "tableName": "Artist",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`artistId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `artist_name` TEXT)",
        "fields": [
          {
            "fieldPath": "artistId",
            "columnName": "artistId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "artist_name",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "artistId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Album",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`albumId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `album_name` TEXT, `album_cover` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "albumId",
            "columnName": "albumId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "album_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "image",
            "columnName": "album_cover",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "albumId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "SongCollection",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`scId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `scName` TEXT, `scType` TEXT, `scSize` INTEGER NOT NULL, `scTotalDuration` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "scId",
            "columnName": "scId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scName",
            "columnName": "scName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "scType",
            "columnName": "scType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "scSize",
            "columnName": "scSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scTotalDuration",
            "columnName": "scTotalDuration",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "scId"
          ]
        },
        "indices": [
          {
            "name": "index_SongCollection_scName_scSize",
            "unique": true,
            "columnNames": [
              "scName",
              "scSize"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_SongCollection_scName_scSize` ON `${TABLE_NAME}` (`scName`, `scSize`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CollectionSongCrossRef",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`crSCId` INTEGER NOT NULL, `crSongId` INTEGER NOT NULL, `crSongOrder` INTEGER NOT NULL, PRIMARY KEY(`crSCId`, `crSongId`), FOREIGN KEY(`crSCId`) REFERENCES `SongCollection`(`scId`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "crSCId",
            "columnName": "crSCId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "crSongId",
            "columnName": "crSongId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "crSongOrder",
            "columnName": "crSongOrder",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "crSCId",
            "crSongId"
          ]
        },
        "indices": [
          {
            "name": "index_CollectionSongCrossRef_crSCId_crSongOrder",
            "unique": true,
            "columnNames": [
              "crSCId",
              "crSongOrder"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_CollectionSongCrossRef_crSCId_crSongOrder` ON `${TABLE_NAME}` (`crSCId`, `crSongOrder`)"
          },
          {
            "name": "index_CollectionSongCrossRef_crSongId",
            "unique": false,
            "columnNames": [
              "crSongId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CollectionSongCrossRef_crSongId` ON `${TABLE_NAME}` (`crSongId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "SongCollection",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "crSCId"
            ],
            "referencedColumns": [
              "scId"
            ]
          }
        ]
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'f7ce56d5d8c860d421a501455ccc051e')"
    ]
  }
}